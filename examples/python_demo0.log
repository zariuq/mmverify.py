mmverify.py -- Proof verifier for the Metamath language
Reading source file "demo0.mm"...
Statement: ['0', '+', '=', '->', '(', ')', 'term', 'wff', '|-']
Statement: ['t', 'r', 's', 'P', 'Q']
Label: tt
Statement: ['term', 't']
Label: tr
Statement: ['term', 'r']
Label: ts
Statement: ['term', 's']
Label: wp
Statement: ['wff', 'P']
Label: wq
Statement: ['wff', 'Q']
Label: tze
Statement: ['term', '0']
Make assertion: (set(), [], [], ['term', '0'])
Label: tpl
Statement: ['term', '(', 't', '+', 'r', ')']
Make assertion: (set(), [('term', 't'), ('term', 'r')], [], ['term', '(', 't', '+', 'r', ')'])
Label: weq
Statement: ['wff', 't', '=', 'r']
Make assertion: (set(), [('term', 't'), ('term', 'r')], [], ['wff', 't', '=', 'r'])
Label: wim
Statement: ['wff', '(', 'P', '->', 'Q', ')']
Make assertion: (set(), [('wff', 'P'), ('wff', 'Q')], [], ['wff', '(', 'P', '->', 'Q', ')'])
Label: a1
Statement: ['|-', '(', 't', '=', 'r', '->', '(', 't', '=', 's', '->', 'r', '=', 's', ')', ')']
Make assertion: (set(), [('term', 't'), ('term', 'r'), ('term', 's')], [], ['|-', '(', 't', '=', 'r', '->', '(', 't', '=', 's', '->', 'r', '=', 's', ')', ')'])
Label: a2
Statement: ['|-', '(', 't', '+', '0', ')', '=', 't']
Make assertion: (set(), [('term', 't')], [], ['|-', '(', 't', '+', '0', ')', '=', 't'])
Label: min
Statement: ['|-', 'P']
Label: maj
Statement: ['|-', '(', 'P', '->', 'Q', ')']
Label: mp
Statement: ['|-', 'Q']
Make assertion: (set(), [('wff', 'P'), ('wff', 'Q')], [['|-', 'P'], ['|-', '(', 'P', '->', 'Q', ')']], ['|-', 'Q'])
Label: th1
Statement: ['|-', 't', '=', 't']
Statement: ['tt', 'tze', 'tpl', 'tt', 'weq', 'tt', 'tt', 'weq', 'tt', 'a2', 'tt', 'tze', 'tpl', 'tt', 'weq', 'tt', 'tze', 'tpl', 'tt', 'weq', 'tt', 'tt', 'weq', 'wim', 'tt', 'a2', 'tt', 'tze', 'tpl', 'tt', 'tt', 'a1', 'mp', 'mp']
Make assertion: (set(), [('term', 't')], [], ['|-', 't', '=', 't'])
Verify: th1
Proof step: ('$f', ['term', 't'])
Proof stack: [['term', 't']]
Proof step: ('$a', (set(), [], [], ['term', '0']))
Substitution to apply: {}
Applying subst {} to stmt ['term', '0'] : ['term', '0']
Proof stack: [['term', 't'], ['term', '0']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['term', '(', 't', '+', 'r', ')']))
Substitution to apply: {'t': ['t'], 'r': ['0']}
Applying subst {'t': ['t'], 'r': ['0']} to stmt ['term', '(', 't', '+', 'r', ')'] : ['term', '(', 't', '+', '0', ')']
Proof stack: [['term', '(', 't', '+', '0', ')']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['term', '(', 't', '+', '0', ')'], ['term', 't']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['wff', 't', '=', 'r']))
Substitution to apply: {'t': ['(', 't', '+', '0', ')'], 'r': ['t']}
Applying subst {'t': ['(', 't', '+', '0', ')'], 'r': ['t']} to stmt ['wff', 't', '=', 'r'] : ['wff', '(', 't', '+', '0', ')', '=', 't']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['term', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['term', 't'], ['term', 't']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['wff', 't', '=', 'r']))
Substitution to apply: {'t': ['t'], 'r': ['t']}
Applying subst {'t': ['t'], 'r': ['t']} to stmt ['wff', 't', '=', 'r'] : ['wff', 't', '=', 't']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['term', 't']]
Proof step: ('$a', (set(), [('term', 't')], [], ['|-', '(', 't', '+', '0', ')', '=', 't']))
Substitution to apply: {'t': ['t']}
Applying subst {'t': ['t']} to stmt ['|-', '(', 't', '+', '0', ')', '=', 't'] : ['|-', '(', 't', '+', '0', ')', '=', 't']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', 't']]
Proof step: ('$a', (set(), [], [], ['term', '0']))
Substitution to apply: {}
Applying subst {} to stmt ['term', '0'] : ['term', '0']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', 't'], ['term', '0']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['term', '(', 't', '+', 'r', ')']))
Substitution to apply: {'t': ['t'], 'r': ['0']}
Applying subst {'t': ['t'], 'r': ['0']} to stmt ['term', '(', 't', '+', 'r', ')'] : ['term', '(', 't', '+', '0', ')']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', '(', 't', '+', '0', ')']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', '(', 't', '+', '0', ')'], ['term', 't']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['wff', 't', '=', 'r']))
Substitution to apply: {'t': ['(', 't', '+', '0', ')'], 'r': ['t']}
Applying subst {'t': ['(', 't', '+', '0', ')'], 'r': ['t']} to stmt ['wff', 't', '=', 'r'] : ['wff', '(', 't', '+', '0', ')', '=', 't']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['term', 't']]
Proof step: ('$a', (set(), [], [], ['term', '0']))
Substitution to apply: {}
Applying subst {} to stmt ['term', '0'] : ['term', '0']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['term', 't'], ['term', '0']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['term', '(', 't', '+', 'r', ')']))
Substitution to apply: {'t': ['t'], 'r': ['0']}
Applying subst {'t': ['t'], 'r': ['0']} to stmt ['term', '(', 't', '+', 'r', ')'] : ['term', '(', 't', '+', '0', ')']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['term', '(', 't', '+', '0', ')']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['term', '(', 't', '+', '0', ')'], ['term', 't']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['wff', 't', '=', 'r']))
Substitution to apply: {'t': ['(', 't', '+', '0', ')'], 'r': ['t']}
Applying subst {'t': ['(', 't', '+', '0', ')'], 'r': ['t']} to stmt ['wff', 't', '=', 'r'] : ['wff', '(', 't', '+', '0', ')', '=', 't']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['term', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['term', 't'], ['term', 't']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['wff', 't', '=', 'r']))
Substitution to apply: {'t': ['t'], 'r': ['t']}
Applying subst {'t': ['t'], 'r': ['t']} to stmt ['wff', 't', '=', 'r'] : ['wff', 't', '=', 't']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't']]
Proof step: ('$a', (set(), [('wff', 'P'), ('wff', 'Q')], [], ['wff', '(', 'P', '->', 'Q', ')']))
Substitution to apply: {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['t', '=', 't']}
Applying subst {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['t', '=', 't']} to stmt ['wff', '(', 'P', '->', 'Q', ')'] : ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')'], ['term', 't']]
Proof step: ('$a', (set(), [('term', 't')], [], ['|-', '(', 't', '+', '0', ')', '=', 't']))
Substitution to apply: {'t': ['t']}
Applying subst {'t': ['t']} to stmt ['|-', '(', 't', '+', '0', ')', '=', 't'] : ['|-', '(', 't', '+', '0', ')', '=', 't']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')'], ['|-', '(', 't', '+', '0', ')', '=', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', 't']]
Proof step: ('$a', (set(), [], [], ['term', '0']))
Substitution to apply: {}
Applying subst {} to stmt ['term', '0'] : ['term', '0']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', 't'], ['term', '0']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r')], [], ['term', '(', 't', '+', 'r', ')']))
Substitution to apply: {'t': ['t'], 'r': ['0']}
Applying subst {'t': ['t'], 'r': ['0']} to stmt ['term', '(', 't', '+', 'r', ')'] : ['term', '(', 't', '+', '0', ')']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', '(', 't', '+', '0', ')']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', '(', 't', '+', '0', ')'], ['term', 't']]
Proof step: ('$f', ['term', 't'])
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['term', '(', 't', '+', '0', ')'], ['term', 't'], ['term', 't']]
Proof step: ('$a', (set(), [('term', 't'), ('term', 'r'), ('term', 's')], [], ['|-', '(', 't', '=', 'r', '->', '(', 't', '=', 's', '->', 'r', '=', 's', ')', ')']))
Substitution to apply: {'t': ['(', 't', '+', '0', ')'], 'r': ['t'], 's': ['t']}
Applying subst {'t': ['(', 't', '+', '0', ')'], 'r': ['t'], 's': ['t']} to stmt ['|-', '(', 't', '=', 'r', '->', '(', 't', '=', 's', '->', 'r', '=', 's', ')', ')'] : ['|-', '(', '(', 't', '+', '0', ')', '=', 't', '->', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')', ')']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['|-', '(', '(', 't', '+', '0', ')', '=', 't', '->', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')', ')']]
Proof step: ('$a', (set(), [('wff', 'P'), ('wff', 'Q')], [['|-', 'P'], ['|-', '(', 'P', '->', 'Q', ')']], ['|-', 'Q']))
Substitution to apply: {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']}
Applying subst {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']} to stmt ['|-', 'P'] : ['|-', '(', 't', '+', '0', ')', '=', 't']
Applying subst {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']} to stmt ['|-', '(', 'P', '->', 'Q', ')'] : ['|-', '(', '(', 't', '+', '0', ')', '=', 't', '->', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')', ')']
Applying subst {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']} to stmt ['|-', 'Q'] : ['|-', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']
Proof stack: [['wff', '(', 't', '+', '0', ')', '=', 't'], ['wff', 't', '=', 't'], ['|-', '(', 't', '+', '0', ')', '=', 't'], ['|-', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']]
Proof step: ('$a', (set(), [('wff', 'P'), ('wff', 'Q')], [['|-', 'P'], ['|-', '(', 'P', '->', 'Q', ')']], ['|-', 'Q']))
Substitution to apply: {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['t', '=', 't']}
Applying subst {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['t', '=', 't']} to stmt ['|-', 'P'] : ['|-', '(', 't', '+', '0', ')', '=', 't']
Applying subst {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['t', '=', 't']} to stmt ['|-', '(', 'P', '->', 'Q', ')'] : ['|-', '(', '(', 't', '+', '0', ')', '=', 't', '->', 't', '=', 't', ')']
Applying subst {'P': ['(', 't', '+', '0', ')', '=', 't'], 'Q': ['t', '=', 't']} to stmt ['|-', 'Q'] : ['|-', 't', '=', 't']
Proof stack: [['|-', 't', '=', 't']]
Stack at end of proof: [['|-', 't', '=', 't']]
Correct proof!
No errors were found.
